{"version":3,"sources":["reducers/layers.js","reducers/index.js","store.js","components/Map/actions/actionHover.js","components/Map/Map.jsx","components/Legend/actions/actionLegend.js","components/Legend/Legend.jsx","components/Radio/actions/actionRadio.js","components/Radio/Radio.jsx","components/Text/Text.js","App.js","reportWebVitals.js","index.js"],"names":["INITIAL_STATE","id","hoveredStateId","hoveredLegend","viewport","latitude","longitude","zoom","currentMouse","cursorStyle","id_temp","value","name","type","options","url","colors","limits","visible","toggleable","allReducers","combineReducers","layers","state","action","map","l","payload","console","log","radioValue","store","createStore","actionHover","hoveredId","cursor","mouse_latLng","connect","dispatch","bindActionCreators","setHoveredStateId","props","useState","setViewport","style","width","height","mapStyle","accessToken","maxZoom","minZoom","onViewportChange","showCompass","showZoom","position","data","source","paint","onHover","event","lat","lngLat","lng","features","length","nextHoveredStateId","onLeave","closeButton","closeOnClick","hover","actionLegend","key","bool","justify","align","className","span","c","i","onMouseOver","e","key_id","0","1","2","3","4","5","6","7","8","9","10","11","12","13","target","accessKey","onMouseOut","flex","backgroundColor","borderColor","borderStyle","actionRadio","setValue","Group","onChange","marginTop","Content","Layout","Sider","App","Radio","orientation","plain","Map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.097d4bb7.chunk.js","sourcesContent":["const INITIAL_STATE =  [\n    {\n      id: 'map',\n      hoveredStateId: null,\n      hoveredLegend: true,\n      viewport: {\n        latitude: 66.9,\n        longitude: -177,\n        zoom: 3.6},\n      currentMouse: {\n        latitude: 66.9,\n        longitude: -170\n      },\n      cursorStyle:'',\n      id_temp: [9, 8, 7, 6, 5, 4, 3, 2, 1, 0, -1, 10, 11, 12],\n      value: 1\n    },\n    {\n      id: 1,\n      name: 'Температура воды в поверхностном слое',\n      type: 'geojson',\n      options: {\n        url: 'https://raw.githubusercontent.com/ValeriaBelousova/json_data/master/temp_surface_id.geojson',\n      },\n      colors: [\"#2c4276\", \"#294888\", \"#4d89c5\", \"#78b2df\", \"#aed6f1\", \"#e0f1fc\", \"#fffbd1\", \"#f0b484\", \"#e08c6b\", \"#c66051\",\n      \"#a2354e\", \"#792236\", \"#5e1727\", \"#462212\"],\n      limits: [ -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],\n      id_temp: [9, 8, 7, 6, 5, 4, 3, 2, 1, 0, -1, 10, 11, 12],\n      visible: false,\n      toggleable: true\n    },\n    {\n      id: 2,\n      name: 'Температура воды на глубине 25 метров',\n      type: 'geojson',\n      options: {\n        url: 'https://raw.githubusercontent.com/ValeriaBelousova/json_data/master/temp_25m_id.geojson'\n      },\n      colors: [\"#1f345a\", \"#2c4276\", \"#294888\", \"#4d89c5\", \"#78b2df\", \"#aed6f1\", \"#e0f1fc\", \"#fffbd1\", \"#f0b484\"],\n      limits: [ -2, -1, 0, 1, 2, 3, 4, 5, 6],\n      id_temp: [-2, -1, 0, 1, 2, 3, 4, 5, 6],\n      visible: false,\n      toggleable: true\n    }\n]\n\nexport default function (state=INITIAL_STATE, action) {\n    // console.log(action);\n    switch (action.type) {\n        case 'HOVER_FEATURE':\n          //console.log(action);\n            return state.map(l => {\n                if (l.id === 'map') {\n                    l.hoveredStateId = action.payload.hoveredStateId;\n                    l.cursorStyle = action.payload.cursorStyle;\n                    l.currentMouse = action.payload.currentMouse;\n                }\n                return l;\n            });\n        case 'HOVER_LEGEND':\n          console.log(action);\n            return state.map(l => {\n                if (l.id === 'map') {\n                    l.hoveredStateId = action.payload.hoveredStateId;\n                    l.hoveredLegend = action.payload.hoveredLegend;\n                }\n                return l;\n            });\n          case 'LAYER_CHANGE':\n              console.log(action);\n                return state.map(l => {\n                    if (l.id === 'map') {\n                        l.value = action.payload.radioValue;\n                    }\n                    return l;\n                });\n        default:\n            return state\n    };\n}","import { combineReducers } from \"redux\";\nimport LayersReducer from \"./layers\";\n\nconst allReducers = combineReducers({\n  layers: LayersReducer\n});\n\nexport default allReducers;","import { createStore } from \"redux\";\nimport allReducers from './reducers';\n\nconst store = createStore(allReducers);\n\nexport default store;","export const actionHover = (hoveredId, cursor, mouse_latLng) => {\n\n    return {\n        type: \"HOVER_FEATURE\",\n        payload: { currentMouse: mouse_latLng,\n            hoveredStateId: hoveredId,\n                    cursorStyle: cursor,\n                    }\n    }\n}\n\nexport default actionHover; ","import React, { useState } from 'react';\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport MapGL, { Source, Layer, FeatureState, NavigationControl, Popup } from '@urbica/react-map-gl';\nimport actionHover from './actions/actionHover';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport mapboxgl from \"mapbox-gl\";\nimport { OmitProps } from 'antd/lib/transfer/ListBody';\n\nconst MapComponent = (props) => {\n\n    const [hoveredStateId, setHoveredStateId] = useState(props.layers[0].hoveredStateId);\n    const [viewport, setViewport] = useState(props.layers[0].viewport);\n\n    const onHover = (event) => {\n        //console.log(event.lngLat);\n        let lat = event.lngLat.lat;\n        let lng = event.lngLat.lng;\n        if (event.features.length > 0) {\n          const nextHoveredStateId = event.features[0].id;\n          //console.log(props.layers[0].hoveredStateId);\n          if (props.layers[0].hoveredStateId !== nextHoveredStateId) {\n            props.setHoveredStateId(nextHoveredStateId, 'pointer', {latitude:lat, longitude:lng});\n          }\n        }\n      };     \n      const onLeave = () => {\n        if (props.layers[0].hoveredStateId) {\n          props.setHoveredStateId(null, '');\n        }\n      };  \n      return (\n        <MapGL\n        style={{ width: '100%', height: '700px' }}\n        mapStyle='mapbox://styles/mapbox/light-v9'\n        accessToken={'pk.eyJ1IjoidmFsZXJpYWJlbG91c292YSIsImEiOiJjanBmMmt0c2cwNjQyM3FsZ2gzY2dvemNvIn0.skr82NeiNVFPUi-zxKKqiw'}\n        latitude={viewport.latitude}\n        longitude={viewport.longitude}\n        zoom={viewport.zoom}\n        maxZoom={7}\n        minZoom={3}\n        cursorStyle={props.layers[0].cursorStyle}\n        onViewportChange={setViewport}\n        {...viewport}\n      >\n        <NavigationControl showCompass showZoom position='top-right' />\n        <Source\n          id='states'\n          type='geojson'\n          //data='https://raw.githubusercontent.com/ValeriaBelousova/json_data/master/temp_surface_id.geojson'\n          data={props.layers[props.layers[0].value].options.url}\n        />\n        <Layer\n          id='state-fills'\n          type='fill'\n          source='states'\n          paint={{\n            'fill-color': [\"match\", ['get', 't'], \n                          -2, \"#1f345a\",\n                          -1, \"#2c4276\", \n                          0, \"#294888\", \n                          1, \"#4d89c5\", \n                          2, \"#78b2df\",\n                          3, \"#aed6f1\",\n                          4, \"#e0f1fc\",\n                          5, \"#fffbd1\",\n                          6, \"#f0b484\",\n                          7, \"#e08c6b\",\n                          8, \"#c66051\",\n                          9, \"#a2354e\",\n                          10, \"#792236\",\n                          11, \"#5e1727\",\n                          12, \"#462212\", \"#a817b0\"],\n            'fill-opacity': ['case', ['boolean', ['feature-state', 'hover'], false], 1.1, 0.9],\n          }}\n          onHover={onHover}\n          onLeave={onLeave}\n        />\n        {(props.layers[0].hoveredStateId && props.layers[0].hoveredLegend) &&\n          <Popup longitude={props.layers[0].currentMouse.longitude} latitude={props.layers[0].currentMouse.latitude} closeButton={false} closeOnClick={false}>\n            {props.layers[props.layers[0].value].id_temp[props.layers[0].hoveredStateId - 1]}°C👋\n          </Popup>}\n        {props.layers[0].hoveredStateId && \n          <FeatureState id={props.layers[0].hoveredStateId} source='states' state={{ hover: true }} />}\n    </MapGL>\n      );\n  };\n  \n  const mapStateToProps = (state) => {\n    return {\n      layers: state.layers\n    };\n  };\n  const mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({\n      setHoveredStateId: actionHover,\n      \n    }, dispatch);\n  };\n  \n  export default connect(mapStateToProps, mapDispatchToProps)(MapComponent);","export const actionLegend = (key, bool) => {\n\n    return {\n        type: \"HOVER_LEGEND\",\n        payload: {\n            hoveredStateId: key,\n            hoveredLegend: bool,\n                    }\n    }\n}\n\nexport default actionLegend; ","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport actionLegend from './actions/actionLegend';\nimport './css/legend.css';\nimport { Row, Col } from 'antd';\n\nconst Legend = (props) => {\n    //const { appStore, sidebarMenuFiltersStore } = useStores();\n  \n    return (\n      <div\n        type=\"flex\"\n        justify=\"center\"\n        align=\"middle\"\n        className=\"legend\"\n      >\n        <Row className=\"legend-title\">\n          <Col span={24}>Температура, °C</Col>\n        </Row>\n        <div type=\"flex\" justify=\"center\" align=\"middle\" className=\"legendInner\">\n        <Row>\n          {props.layers[props.layers[0].value].colors.map((c, i) => {\n            const enterCursore = (e) => {\n              let key_id = {};\n              if (props.layers[0].value === 1) {\n                //console.log('key_id');\n                key_id = {0:11, 1:10, 2:9, 3:8, 4:7, 5:6, 6:5, 7:4, 8:3, 9:2, 10:1, 11:12, 12:13, 13:14};\n              }\n              else {\n                key_id = {0:1, 1:2, 2:3, 3:4, 4:5, 5:6, 6:7, 7:8, 8:9};\n              }\n                //let key_id = {0:11, 1:10, 2:9, 3:8, 4:7, 5:6, 6:5, 7:4, 8:3, 9:2, 10:1, 11:12, 12:13, 13:14};\n                props.setHoveredStateId(key_id[e.target.accessKey], false);\n                };\n            const outCursore = (e) => {\n                props.setHoveredStateId(null, true);\n                };\n            return <Col onMouseOver={enterCursore} onMouseOut={outCursore} \n                    accessKey={i} flex={2} key={i} \n                    style={{ backgroundColor: c, height: '25px', borderColor: 'black', borderStyle: ''}}></Col>;\n          })}\n        </Row>\n        <Row>\n          {props.layers[props.layers[0].value].limits.map((l, i) => {\n            return (\n              <Col key={i} flex={2}>\n                {' '}\n                {l}{' '}\n              </Col>\n            );\n          })}\n        </Row>\n        </div>\n      </div>\n    );\n  };\n  const mapStateToProps = (state) => {\n    return {\n      layers: state.layers\n    };\n  };\n  const mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({\n      setHoveredStateId: actionLegend,\n      \n    }, dispatch);\n  };\n  export default connect(mapStateToProps, mapDispatchToProps)(Legend);","export const actionRadio = (value) => {\n    return {\n        type: \"LAYER_CHANGE\",\n        payload: {\n            radioValue: value}\n    }\n}\nexport default actionRadio; ","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport actionRadio from \"./actions/actionRadio\";\nimport { Radio } from 'antd';\n\nconst RadioMenu = (props) => {\n    //const { appStore, sidebarMenuFiltersStore } = useStores();\n    const onChange = e => {\n      console.log('radio checked', e.target.value);\n      props.setValue(e.target.value);\n    };\n    return (\n      <Radio.Group onChange={onChange} value={props.layers[0].value}>\n          <Radio value={1}>Распределение температур в поверхностном слое</Radio>\n          <Radio style={{ marginTop: 6 }} value={2}>Распределение температур на глубине 25 метров</Radio>\n        </Radio.Group>\n    );\n  };\n  const mapStateToProps = (state) => {\n    return {\n      layers: state.layers\n    };\n  };\n  const mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({\n      setValue: actionRadio,\n      \n    }, dispatch);\n  };\n  export default connect(mapStateToProps, mapDispatchToProps)(RadioMenu);","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport './css/text.css';\nimport { Row, Col } from 'antd';\n\nconst Text = (props) => {\n    //const { appStore, sidebarMenuFiltersStore } = useStores();\n    return (\n        <Row className=\"map-text\">\n          {(props.layers[0].value == 1) &&\n          <Col span={24}>Гидрологический режим Чукотского моря определяется неравномерным поступлением солнечной радиации\n           к поверхности воды в течение года и потоком воды тихоокеанского происхождения, проникающим в акваторию моря через\n            Берингов пролив. В летний период теплые (+1 ... + 6°C) и соленые (31–32‰) воды Аляскинского течения проходят через\n             восточную часть Берингова пролива на шельф Чукотского моря. Через западную часть пролива поступают более соленые\n              ((32–33‰) и менее теплые (0 ... + 2°C) водные массы Берингова моря.</Col>}\n          {(props.layers[0].value == 2) &&\n          <Col span={24}>Температура воды в южной части Чукотского моря понижается с глубиной, однако даже в придонном горизонте \n          ее значения остаются положительными.\n          В северной и северо-западной части Чукотского моря в придонном горизонте залегают холодные арктические воды с \n          температурой ниже нуля.</Col>\n          }\n        </Row>\n    );\n  };\n  const mapStateToProps = (state) => {\n    return {\n      layers: state.layers\n    };\n  };\n  export default connect(mapStateToProps)(Text);","import './App.css';\nimport React from 'react';\nimport MapComponent from './components/Map/Map';\nimport Legend from './components/Legend/Legend';\nimport Radio from './components/Radio/Radio';\nimport Text from './components/Text/Text';\nimport { Layout } from 'antd';\nimport { Row, Col, Checkbox, Divider } from 'antd';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport { OmitProps } from 'antd/lib/transfer/ListBody';\n\nconst { Sider, Content } = Layout;\n\nfunction App() {\n  return (\n    <Layout className=\"main-layout\">\n    <Content>\n      <div className='main-title'>\n        <Row className=\"map-title\">\n          <Col span={24}>Распределение температуры в поверхностном слое</Col>\n        </Row>\n      </div>\n      <div className=\"menu\">\n      \n      <Row className=\"checkboxRow1\">\n        <Radio/>\n      </Row>\n      <Divider orientation=\"left\" plain>Краткая характеристика</Divider>\n      <Text/>\n      </div>\n      <MapComponent/>\n      <Legend/>\n    </Content>\n    </Layout>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n   </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}